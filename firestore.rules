rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ==================== HELPER FUNCTIONS ====================
    // Checks if a user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Checks if the requesting user is the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // ==================== USER DATA & TRADING COLLECTIONS ====================

    // Main collection for user-specific trading data.
    // All subcollections inherit these ownership rules.
    match /snaptrade_users/{userId} {
      // Users can only read and write their own documents.
      allow read, write: if isAuthenticated() && isOwner(userId);

      // This single rule applies to ALL nested subcollections and documents,
      // including:
      // - /information/onboarding_profile/{docId}
      // - /information/accounts/{accountId}/... (and its subcollections)
      // - /metrics/portfolio_summary/{docId}
      // - /metrics/trade_stats_all/{docId}
      // etc.
      match /{subcollection}/{path=**} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }

    // CRITICAL SECURITY RULE: Server-Side Only Secrets
    // This collection stores sensitive user secrets and MUST NOT be accessible
    // from the client. Access should only be granted to backend services
    // (e.g., Cloud Functions) using Admin SDK credentials.
    match /snaptrade_user_secrets/{userId} {
      allow read, write: if false;
    }

    // General user profile information (if separate from snaptrade_users).
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // ==================== STRIPE PAYMENTS COLLECTIONS ====================

    // Stripe customer data. Users can only access their own.
    match /customers/{uid} {
      allow read: if isAuthenticated() && isOwner(uid);

      // Allow users to create checkout sessions and read their subscriptions/payments.
      match /checkout_sessions/{id} {
        allow read, write: if isAuthenticated() && isOwner(uid);
      }
      match /subscriptions/{id} {
        allow read: if isAuthenticated() && isOwner(uid);
      }
      match /payments/{id} {
        allow read: if isAuthenticated() && isOwner(uid);
      }
    }

    // Products and prices are public and read-only for all users.
    match /products/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }
    }
  }
}
